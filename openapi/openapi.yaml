openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
  /tasks/{id}:
    patch:
      summary: Update task
      tags:
        - tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        description: The task to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskRequest"
      responses:
        '200':
          description: Updated task
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
    delete:
      summary: Delete task
      tags:
        - tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Task deleted

  /users:
    get:
      summary: Get all users
      tags:
        - users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Register new user
      tags:
        - users
      requestBody:
        description: The user to register
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '201':
          description: The registered user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    patch:
      summary: Update user
      tags:
        - users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        description: The user to update
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRequest"
      responses:
        '200':
          description: Updated user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
    delete:
      summary: Delete user
      tags:
        - users
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
        task:
          type: string
        is_done:
          type: boolean
    TaskRequest:
      type: object
      properties:
        task:
          type: string
        is_done:
          type: boolean

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
    UserRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string